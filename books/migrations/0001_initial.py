# Generated by Django 4.1.5 on 2023-01-13 15:03

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('author', '0001_initial'),
        ('genres', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, verbose_name='Quantity')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(max_length=1000, verbose_name='Description')),
                ('price', models.IntegerField(default=200, verbose_name='Price')),
                ('release_date', models.DateField(default=datetime.date.today, verbose_name='Date of release')),
                ('author', models.ManyToManyField(max_length=100, to='author.author', verbose_name='Author')),
                ('genres', models.ManyToManyField(to='genres.genre', verbose_name='genres')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('CART', 'In cart'), ('AWAITING_ARRIVAL', 'Awaiting_arrival'), ('AWAITING_PAYMENT', 'Awaiting payment'), ('PAID', 'Paid'), ('AWAITING_DELIVERY', 'Awaiting delivery'), ('SENT', 'Sent'), ('FINISHED', 'Finished')], default='CART', max_length=50, verbose_name='State')),
                ('order_id', models.CharField(blank=True, max_length=250, null=True, verbose_name="Order's id")),
                ('quantity', models.IntegerField(null=True, verbose_name='Quantity')),
                ('book', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='books.book', verbose_name='Item')),
                ('user', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
